{"ast":null,"code":"var _jsxFileName = \"/Users/polaper/Documents/React/01-starting-setup/React-Udemy/src/components/Expenses/ExpenseItem.js\",\n    _s = $RefreshSig$();\n\n//component in react is just a js function that just returns jsx\n//no puedes tener mas de un root element en un componente\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  _s();\n\n  //useState es un hook simpre devuelve un array deconstruido\n  const [title, setTitle] = useState(props.title); //primer elemento es la variable cambiable y el segundo la function para actualizarla\n\n  const clickHandler = () => {\n    setTitle(\"Updated\");\n  }; //props es por defecto lo que recibe, no se pasam parms por separad, keyvaluepairs\n\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"$\", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clickHandler,\n      children: \"change title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseItem, \"ceUz0wjPP/oTY3+evv2xH5hljW4=\");\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Users/polaper/Documents/React/01-starting-setup/React-Udemy/src/components/Expenses/ExpenseItem.js"],"names":["ExpenseDate","Card","React","useState","ExpenseItem","props","title","setTitle","clickHandler","date","amount"],"mappings":";;;AAAA;AACA;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAY;AAAA;;AAE9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,KAAK,CAACC,KAAP,CAAlC,CAH8B,CAGmB;;AAEjD,QAAME,YAAY,GAAG,MAAK;AACxBD,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACD,GAFD,CAL8B,CAQ9B;;;AACA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEF,KAAK,CAACI;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,8BACE;AAAA,kBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,wBAAuCD,KAAK,CAACK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAQ,MAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnBD;;GAAMJ,W;;KAAAA,W;AAqBN,eAAeA,WAAf","sourcesContent":["//component in react is just a js function that just returns jsx\n//no puedes tener mas de un root element en un componente\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\"\nimport React, { useState } from 'react';\n\nconst ExpenseItem = (props) =>  {\n\n  //useState es un hook simpre devuelve un array deconstruido\n  const [title, setTitle] = useState(props.title); //primer elemento es la variable cambiable y el segundo la function para actualizarla\n  \n  const clickHandler = () =>{\n    setTitle(\"Updated\");\n  };\n  //props es por defecto lo que recibe, no se pasam parms por separad, keyvaluepairs\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date}></ExpenseDate>\n      <div className=\"expense-item__description\">\n        <h2>{title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>change title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n"]},"metadata":{},"sourceType":"module"}